# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    tags: [ "x*.*.*" ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        coq_version:
          - '8.18'
        ocaml_version:
          - '4.09-flambda'
          - '4.13-flambda'
    steps:
    - uses: actions/checkout@v2
    - uses: coq-community/docker-coq-action@v1
      with:
        opam_file: './coq-elpi.opam'
        coq_version: ${{ matrix.coq_version }}
        ocaml_version: ${{ matrix.ocaml_version }}
        export: 'OPAMWITHTEST'
        install: |
          startGroup "Install dependencies"
            opam pin add -n -y -k path $PACKAGE $WORKDIR
            opam update -y
            opam install -y -j 2 $PACKAGE --deps-only
          endGroup
      env:
        OPAMWITHTEST: 'true'

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Create archive
        run: |
          VERSION="${GITHUB_REF_NAME_SLUG#x}"
          git archive -o coq-elpi-$VERSION.tar.gz --prefix=coq-elpi-$VERSION/ $GITHUB_SHA .

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: coq-elpi-*.tar.gz
          fail_on_unmatched_files: true
          draft: true
          prerelease: true
          generate_release_notes: true
          name: "Coq-Elpi ${GITHUB_REF_SLUG#x} for Coq XXX"

  publish-opam-package:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ create-release ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use OCaml 4.14.x
      uses: avsm/setup-ocaml@v2
      with:
        ocaml-compiler: 4.14.x
        opam-local-packages: !coq-elpi.opam

    - name: Write PAT
      env:
        OPAM_PUBLISH_TOKEN: ${{ secrets.OPAM_PUBLISH_TOKEN }}
      run: |
        mkdir -p ~/.opam/plugins/opam-publish
        printf "$OPAM_PUBLISH_TOKEN" > ~/.opam/plugins/opam-publish/coqelpibot.token

    - name: Install opam-publish # 2.0.3 because more recent versions do not respect OPAMYES
      run: opam install -y -j 2 opam-publish=2.0.3

    - name: Publish
      run: |
        eval $(opam env)
        git config --global user.name coqelpibot
        git config --global user.email coqelpibot@inria.fr
        echo "-n" | make release
    